{"ast":null,"code":"import Quagga from\"quagga\";import QrScanner from\"qr-scanner\";import{useEffect,useRef,useState,useCallback}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Scanner=_ref=>{let{onDetected}=_ref;const navigate=useNavigate();// Refs\nconst scannerRef=useRef(null);const videoRef=useRef(null);const timeoutRef=useRef(null);const countdownRef=useRef(null);const qrScannerRef=useRef(null);const hasScannedRef=useRef(false);// State\nconst[scannedCode,setScannedCode]=useState(null);const[flash,setFlash]=useState(false);const[isInitialized,setIsInitialized]=useState(false);const[error,setError]=useState(null);const[timeLeft,setTimeLeft]=useState(15);const[isScanning,setIsScanning]=useState(false);const[scanComplete,setScanComplete]=useState(false);const[scanMode,setScanMode]=useState(\"auto\");const[manualInput,setManualInput]=useState(\"\");const[showManualInput,setShowManualInput]=useState(false);const[cameraList,setCameraList]=useState([]);const[selectedCamera,setSelectedCamera]=useState(null);const[isRetrying,setIsRetrying]=useState(false);const stopAllScanners=useCallback(()=>{try{// Stop QR Scanner\nif(qrScannerRef.current){qrScannerRef.current.stop();qrScannerRef.current.destroy();qrScannerRef.current=null;}// Clear video element\nif(videoRef.current){videoRef.current.srcObject=null;videoRef.current.load();}// Stop Quagga Scanner\nif(Quagga.running){Quagga.stop();}// Clear all event listeners\ntry{Quagga.offDetected();Quagga.offProcessed();}catch(e){// Ignore errors if listeners weren't set\n}// Clear timeouts and intervals\nif(timeoutRef.current){clearTimeout(timeoutRef.current);timeoutRef.current=null;}if(countdownRef.current){clearInterval(countdownRef.current);countdownRef.current=null;}console.log(\"All scanners stopped and cleaned up\");}catch(e){console.warn(\"Error stopping scanners:\",e);}},[]);const handleTimeout=useCallback(()=>{console.log(\"Scan timeout reached\");setIsScanning(false);setScanComplete(true);setError(\"Scan timeout - No code detected in 15 seconds. Try adjusting lighting or code position.\");stopAllScanners();},[stopAllScanners]);// Countdown timer effect\nuseEffect(()=>{if(isScanning&&timeLeft>0){countdownRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){handleTimeout();return 0;}return prev-1;});},1000);}else if(timeLeft===0){clearInterval(countdownRef.current);}return()=>{if(countdownRef.current){clearInterval(countdownRef.current);}};},[isScanning,timeLeft,handleTimeout]);const handleCodeDetected=useCallback((code,type)=>{console.log(\"=== \".concat(type.toUpperCase(),\" DETECTED ===\"));console.log(\"Code:\",code);console.log(\"Type:\",type);// Mark as scanned to prevent timeout\nhasScannedRef.current=true;// Stop all scanners immediately\nstopAllScanners();setIsScanning(false);setScanComplete(true);setTimeLeft(0);setScannedCode({code,type});setFlash(true);if(onDetected){onDetected({code,type});}// Navigate to verify page after a brief delay to show the success message\nsetTimeout(()=>{navigate(\"/verify?code=\".concat(encodeURIComponent(code)));},2000);// Remove flash after 2 seconds\nsetTimeout(()=>setFlash(false),2000);},[onDetected,stopAllScanners,navigate]);const getAvailableCameras=useCallback(async()=>{try{const devices=await navigator.mediaDevices.enumerateDevices();const videoDevices=devices.filter(device=>device.kind==='videoinput');setCameraList(videoDevices);if(videoDevices.length>0){setSelectedCamera(videoDevices[0].deviceId);}}catch(error){console.error(\"Error getting camera list:\",error);}},[]);const initializeQRScanner=useCallback(async()=>{try{if(!videoRef.current)return;console.log(\"Initializing QR Scanner...\");qrScannerRef.current=new QrScanner(videoRef.current,result=>{console.log(\"QR Code detected:\",result);handleCodeDetected(result.data,\"QR Code\");},{onDecodeError:error=>{// Don't log every decode error as it's too verbose\nif(error.includes(\"No QR code found\"))return;console.log(\"QR decode error:\",error);},highlightScanRegion:true,highlightCodeOutline:true});await qrScannerRef.current.start();console.log(\"QR Scanner started successfully\");return true;}catch(error){console.error(\"QR Scanner initialization failed:\",error);return false;}},[handleCodeDetected]);const initializeBarcodeScanner=useCallback(async()=>{try{if(!scannerRef.current)return false;console.log(\"Initializing Barcode Scanner...\");return new Promise(resolve=>{Quagga.init({inputStream:{type:\"LiveStream\",target:scannerRef.current,constraints:{facingMode:selectedCamera?undefined:{ideal:\"environment\"},deviceId:selectedCamera?{exact:selectedCamera}:undefined,width:{min:320,ideal:640,max:1280},height:{min:240,ideal:480,max:720}}},locator:{patchSize:\"medium\",halfSample:true},numOfWorkers:navigator.hardwareConcurrency||2,frequency:10,decoder:{readers:[\"code_128_reader\",\"ean_reader\",\"ean_8_reader\",\"code_39_reader\",\"code_39_vin_reader\",\"codabar_reader\",\"upc_reader\",\"upc_e_reader\",\"i2of5_reader\",\"2of5_reader\",\"code_93_reader\"]},locate:true},err=>{if(err){console.error(\"Barcode Scanner initialization failed:\",err);resolve(false);return;}Quagga.start();Quagga.onDetected(result=>{if(result.codeResult&&result.codeResult.code){console.log(\"Barcode detected:\",result.codeResult.code);handleCodeDetected(result.codeResult.code,\"Barcode\");}});console.log(\"Barcode Scanner started successfully\");resolve(true);});});}catch(error){console.error(\"Barcode Scanner setup error:\",error);return false;}},[selectedCamera,handleCodeDetected]);const startScanning=useCallback(async()=>{try{setIsRetrying(true);setError(null);setScannedCode(null);setScanComplete(false);setTimeLeft(15);setIsScanning(true);hasScannedRef.current=false;// Check camera access first and get the stream\nconst stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:selectedCamera?undefined:{ideal:\"environment\"},deviceId:selectedCamera?{exact:selectedCamera}:undefined,width:{min:320,ideal:640,max:1280},height:{min:240,ideal:480,max:720}}});console.log(\"Camera access granted, stream obtained:\",stream);// Set the video element source\nif(videoRef.current){videoRef.current.srcObject=stream;videoRef.current.play();console.log(\"Video element configured with camera stream\");}let success=false;if(scanMode===\"qr\"){success=await initializeQRScanner();}else if(scanMode===\"barcode\"){success=await initializeBarcodeScanner();}else if(scanMode===\"auto\"){// Try QR first, then barcode if QR fails\nsuccess=await initializeQRScanner();if(!success){success=await initializeBarcodeScanner();}}if(!success){throw new Error(\"Failed to initialize any scanner\");}setIsInitialized(true);setIsRetrying(false);// Set timeout\ntimeoutRef.current=setTimeout(()=>{if(!hasScannedRef.current){handleTimeout();}},15000);}catch(error){console.error(\"Scanner initialization error:\",error);setIsRetrying(false);setIsScanning(false);if(error.name==='NotAllowedError'){setError(\"Camera access denied. Please allow camera permission and refresh the page.\");}else if(error.name==='NotFoundError'){setError(\"No camera found. Please connect a camera and refresh the page.\");}else if(error.name==='NotReadableError'){setError(\"Camera is already in use by another application. Please close other camera apps and refresh the page.\");}else if(error.name==='OverconstrainedError'){setError(\"Camera doesn't support the required resolution. Trying with basic settings...\");// Retry with basic constraints\nsetTimeout(async()=>{try{const basicStream=await navigator.mediaDevices.getUserMedia({video:true});if(videoRef.current){videoRef.current.srcObject=basicStream;videoRef.current.play();}setIsRetrying(false);setIsScanning(true);setIsInitialized(true);}catch(basicError){setError(\"Camera error: \".concat(basicError.message));}},1000);return;// Don't set error message for this case\n}else{setError(\"Scanner error: \".concat(error.message));}}},[scanMode,selectedCamera,initializeQRScanner,initializeBarcodeScanner,handleTimeout]);const resetScanner=useCallback(()=>{stopAllScanners();setScannedCode(null);setError(null);setTimeLeft(15);setIsScanning(false);setScanComplete(false);setFlash(false);setIsInitialized(false);setIsRetrying(false);hasScannedRef.current=false;// Restart scanning after a brief delay\nsetTimeout(()=>{startScanning();},100);},[stopAllScanners,startScanning]);const handleManualSubmit=useCallback(()=>{if(manualInput.trim()){handleCodeDetected(manualInput.trim(),\"Manual Input\");setManualInput(\"\");setShowManualInput(false);}},[manualInput,handleCodeDetected]);const testCamera=useCallback(async()=>{try{console.log(\"Testing camera access...\");const stream=await navigator.mediaDevices.getUserMedia({video:true});console.log(\"Camera test successful:\",stream);setError(null);if(videoRef.current){videoRef.current.srcObject=stream;videoRef.current.play();console.log(\"Video element updated with test stream\");}// Stop the test stream after 3 seconds\nsetTimeout(()=>{stream.getTracks().forEach(track=>track.stop());console.log(\"Test stream stopped\");},3000);}catch(error){console.error(\"Camera test failed:\",error);setError(\"Camera test failed: \".concat(error.message));}},[]);// Initialize on mount\nuseEffect(()=>{getAvailableCameras();startScanning();return()=>{stopAllScanners();};},[getAvailableCameras,startScanning,stopAllScanners]);// Restart scanner when scan mode changes\nuseEffect(()=>{if(isInitialized){console.log(\"Scan mode changed, restarting scanner...\");stopAllScanners();setTimeout(()=>{startScanning();},200);}},[scanMode,isInitialized,stopAllScanners,startScanning]);// Cleanup on unmount\nuseEffect(()=>{return()=>{stopAllScanners();};},[stopAllScanners]);return/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scan-mode-selector\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:\"auto\",checked:scanMode===\"auto\",onChange:e=>setScanMode(e.target.value),disabled:isScanning}),\"Auto (QR + Barcode)\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:\"qr\",checked:scanMode===\"qr\",onChange:e=>setScanMode(e.target.value),disabled:isScanning}),\"QR Code Only\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:\"barcode\",checked:scanMode===\"barcode\",onChange:e=>setScanMode(e.target.value),disabled:isScanning}),\"Barcode Only\"]})]}),cameraList.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"camera-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Camera: \"}),/*#__PURE__*/_jsx(\"select\",{value:selectedCamera||\"\",onChange:e=>setSelectedCamera(e.target.value),disabled:isScanning,children:cameraList.map((camera,index)=>/*#__PURE__*/_jsx(\"option\",{value:camera.deviceId,children:camera.label||\"Camera \".concat(index+1)},camera.deviceId))})]})]}),isScanning&&/*#__PURE__*/_jsxs(\"div\",{className:\"timer-display \".concat(timeLeft<=5?'timer-warning':''),children:[\"\\u23F1\\uFE0F \",timeLeft,\" seconds remaining\"]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-display\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A0\\uFE0F Error:\"}),\" \",error,scanComplete&&/*#__PURE__*/_jsx(\"button\",{onClick:resetScanner,className:\"retry-button\",children:\"\\uD83D\\uDD04 Try Again\"})]}),!isScanning&&!scannedCode&&/*#__PURE__*/_jsxs(\"div\",{className:\"manual-input-section\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',justifyContent:'center',marginBottom:'10px'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowManualInput(!showManualInput),className:\"manual-input-toggle\",children:[showManualInput?\"Hide\":\"Show\",\" Manual Input\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:testCamera,style:{padding:'10px 20px',background:'#3b82f6',color:'white',border:'none',borderRadius:'8px',cursor:'pointer',fontWeight:'500',transition:'background 0.2s'},children:\"\\uD83D\\uDCF7 Test Camera\"})]}),showManualInput&&/*#__PURE__*/_jsxs(\"div\",{className:\"manual-input-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:manualInput,onChange:e=>setManualInput(e.target.value),placeholder:\"Enter code manually...\",onKeyPress:e=>e.key==='Enter'&&handleManualSubmit()}),/*#__PURE__*/_jsx(\"button\",{onClick:handleManualSubmit,disabled:!manualInput.trim(),children:\"Submit\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-box \".concat(flash?\"scanner-flash\":\"\"),children:[/*#__PURE__*/_jsx(\"p\",{children:\"Point your camera at the code to scan\"}),!isInitialized&&!error&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-message\",children:[isRetrying?\"Retrying...\":\"Initializing camera...\",/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.8rem',marginTop:'5px',color:'#666'},children:\"Check browser console for detailed logs\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanner-view\",children:[scanMode===\"qr\"&&/*#__PURE__*/_jsx(\"video\",{ref:videoRef,style:{width:\"100%\",height:\"100%\",objectFit:\"cover\"}}),scanMode===\"barcode\"&&/*#__PURE__*/_jsx(\"div\",{ref:scannerRef,style:{width:\"100%\",height:\"100%\",position:\"relative\"}}),scanMode===\"auto\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,style:{width:\"100%\",height:\"100%\",objectFit:\"cover\"}}),/*#__PURE__*/_jsx(\"div\",{ref:scannerRef,style:{width:\"100%\",height:\"100%\",position:\"absolute\",top:0,left:0,opacity:0}})]}),isScanning&&/*#__PURE__*/_jsxs(\"div\",{className:\"focus-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"scan-frame\"}),scanMode===\"barcode\"&&/*#__PURE__*/_jsx(\"div\",{className:\"scan-line\"})]})]})]}),scannedCode&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-display\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"success-icon\",children:\"\\u2705\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Code Scanned Successfully!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"scanned-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Type:\"}),\" \",scannedCode.type]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Code:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:scannedCode.code})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',justifyContent:'center'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:resetScanner,className:\"scan-again-button\",children:\"\\uD83D\\uDD04 Scan Another Code\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/verify?code=\".concat(encodeURIComponent(scannedCode.code))),style:{padding:'12px 24px',background:'#059669',color:'white',border:'none',borderRadius:'8px',cursor:'pointer',fontWeight:'500',fontSize:'1rem',transition:'background 0.2s'},children:\"\\u2705 Verify This Code\"})]})]}),isInitialized&&!error&&!scanComplete&&/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCF1 Position the code within the frame and hold steady\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCA1 Ensure good lighting and avoid reflections\"})]})]});};export default Scanner;","map":{"version":3,"names":["Quagga","QrScanner","useEffect","useRef","useState","useCallback","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Scanner","_ref","onDetected","navigate","scannerRef","videoRef","timeoutRef","countdownRef","qrScannerRef","hasScannedRef","scannedCode","setScannedCode","flash","setFlash","isInitialized","setIsInitialized","error","setError","timeLeft","setTimeLeft","isScanning","setIsScanning","scanComplete","setScanComplete","scanMode","setScanMode","manualInput","setManualInput","showManualInput","setShowManualInput","cameraList","setCameraList","selectedCamera","setSelectedCamera","isRetrying","setIsRetrying","stopAllScanners","current","stop","destroy","srcObject","load","running","offDetected","offProcessed","e","clearTimeout","clearInterval","console","log","warn","handleTimeout","setInterval","prev","handleCodeDetected","code","type","concat","toUpperCase","setTimeout","encodeURIComponent","getAvailableCameras","devices","navigator","mediaDevices","enumerateDevices","videoDevices","filter","device","kind","length","deviceId","initializeQRScanner","result","data","onDecodeError","includes","highlightScanRegion","highlightCodeOutline","start","initializeBarcodeScanner","Promise","resolve","init","inputStream","target","constraints","facingMode","undefined","ideal","exact","width","min","max","height","locator","patchSize","halfSample","numOfWorkers","hardwareConcurrency","frequency","decoder","readers","locate","err","codeResult","startScanning","stream","getUserMedia","video","play","success","Error","name","basicStream","basicError","message","resetScanner","handleManualSubmit","trim","testCamera","getTracks","forEach","track","className","children","value","checked","onChange","disabled","map","camera","index","label","onClick","style","display","gap","justifyContent","marginBottom","padding","background","color","border","borderRadius","cursor","fontWeight","transition","placeholder","onKeyPress","key","fontSize","marginTop","ref","objectFit","position","top","left","opacity"],"sources":["/Users/sumeetdas/StudioProjects/barcode-verification/src/components/Scanner.js"],"sourcesContent":["import Quagga from \"quagga\";\r\nimport QrScanner from \"qr-scanner\";\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Scanner = ({ onDetected }) => {\r\n  const navigate = useNavigate();\r\n  \r\n  // Refs\r\n  const scannerRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const timeoutRef = useRef(null);\r\n  const countdownRef = useRef(null);\r\n  const qrScannerRef = useRef(null);\r\n  const hasScannedRef = useRef(false);\r\n\r\n  // State\r\n  const [scannedCode, setScannedCode] = useState(null);\r\n  const [flash, setFlash] = useState(false);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(15);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [scanComplete, setScanComplete] = useState(false);\r\n  const [scanMode, setScanMode] = useState(\"auto\");\r\n  const [manualInput, setManualInput] = useState(\"\");\r\n  const [showManualInput, setShowManualInput] = useState(false);\r\n  const [cameraList, setCameraList] = useState([]);\r\n  const [selectedCamera, setSelectedCamera] = useState(null);\r\n  const [isRetrying, setIsRetrying] = useState(false);\r\n\r\n  const stopAllScanners = useCallback(() => {\r\n    try {\r\n      // Stop QR Scanner\r\n      if (qrScannerRef.current) {\r\n        qrScannerRef.current.stop();\r\n        qrScannerRef.current.destroy();\r\n        qrScannerRef.current = null;\r\n      }\r\n      \r\n      // Clear video element\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = null;\r\n        videoRef.current.load();\r\n      }\r\n      \r\n      // Stop Quagga Scanner\r\n      if (Quagga.running) {\r\n        Quagga.stop();\r\n      }\r\n      \r\n      // Clear all event listeners\r\n      try {\r\n        Quagga.offDetected();\r\n        Quagga.offProcessed();\r\n      } catch (e) {\r\n        // Ignore errors if listeners weren't set\r\n      }\r\n      \r\n      // Clear timeouts and intervals\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n        timeoutRef.current = null;\r\n      }\r\n      if (countdownRef.current) {\r\n        clearInterval(countdownRef.current);\r\n        countdownRef.current = null;\r\n      }\r\n      \r\n      console.log(\"All scanners stopped and cleaned up\");\r\n    } catch (e) {\r\n      console.warn(\"Error stopping scanners:\", e);\r\n    }\r\n  }, []);\r\n\r\n  const handleTimeout = useCallback(() => {\r\n    console.log(\"Scan timeout reached\");\r\n    setIsScanning(false);\r\n    setScanComplete(true);\r\n    setError(\"Scan timeout - No code detected in 15 seconds. Try adjusting lighting or code position.\");\r\n    stopAllScanners();\r\n  }, [stopAllScanners]);\r\n\r\n  // Countdown timer effect\r\n  useEffect(() => {\r\n    if (isScanning && timeLeft > 0) {\r\n      countdownRef.current = setInterval(() => {\r\n        setTimeLeft((prev) => {\r\n          if (prev <= 1) {\r\n            handleTimeout();\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      clearInterval(countdownRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (countdownRef.current) {\r\n        clearInterval(countdownRef.current);\r\n      }\r\n    };\r\n  }, [isScanning, timeLeft, handleTimeout]);\r\n\r\n  const handleCodeDetected = useCallback((code, type) => {\r\n    console.log(`=== ${type.toUpperCase()} DETECTED ===`);\r\n    console.log(\"Code:\", code);\r\n    console.log(\"Type:\", type);\r\n\r\n    // Mark as scanned to prevent timeout\r\n    hasScannedRef.current = true;\r\n\r\n    // Stop all scanners immediately\r\n    stopAllScanners();\r\n    setIsScanning(false);\r\n    setScanComplete(true);\r\n    setTimeLeft(0);\r\n\r\n    setScannedCode({ code, type });\r\n    setFlash(true);\r\n\r\n    if (onDetected) {\r\n      onDetected({ code, type });\r\n    }\r\n\r\n    // Navigate to verify page after a brief delay to show the success message\r\n    setTimeout(() => {\r\n      navigate(`/verify?code=${encodeURIComponent(code)}`);\r\n    }, 2000);\r\n\r\n    // Remove flash after 2 seconds\r\n    setTimeout(() => setFlash(false), 2000);\r\n  }, [onDetected, stopAllScanners, navigate]);\r\n\r\n  const getAvailableCameras = useCallback(async () => {\r\n    try {\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      const videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n      setCameraList(videoDevices);\r\n      if (videoDevices.length > 0) {\r\n        setSelectedCamera(videoDevices[0].deviceId);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting camera list:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const initializeQRScanner = useCallback(async () => {\r\n    try {\r\n      if (!videoRef.current) return;\r\n\r\n      console.log(\"Initializing QR Scanner...\");\r\n      qrScannerRef.current = new QrScanner(\r\n        videoRef.current,\r\n        (result) => {\r\n          console.log(\"QR Code detected:\", result);\r\n          handleCodeDetected(result.data, \"QR Code\");\r\n        },\r\n        {\r\n          onDecodeError: (error) => {\r\n            // Don't log every decode error as it's too verbose\r\n            if (error.includes(\"No QR code found\")) return;\r\n            console.log(\"QR decode error:\", error);\r\n          },\r\n          highlightScanRegion: true,\r\n          highlightCodeOutline: true,\r\n        }\r\n      );\r\n\r\n      await qrScannerRef.current.start();\r\n      console.log(\"QR Scanner started successfully\");\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"QR Scanner initialization failed:\", error);\r\n      return false;\r\n    }\r\n  }, [handleCodeDetected]);\r\n\r\n  const initializeBarcodeScanner = useCallback(async () => {\r\n    try {\r\n      if (!scannerRef.current) return false;\r\n\r\n      console.log(\"Initializing Barcode Scanner...\");\r\n      \r\n      return new Promise((resolve) => {\r\n        Quagga.init(\r\n          {\r\n            inputStream: {\r\n              type: \"LiveStream\",\r\n              target: scannerRef.current,\r\n              constraints: {\r\n                facingMode: selectedCamera ? undefined : { ideal: \"environment\" },\r\n                deviceId: selectedCamera ? { exact: selectedCamera } : undefined,\r\n                width: { min: 320, ideal: 640, max: 1280 },\r\n                height: { min: 240, ideal: 480, max: 720 }\r\n              },\r\n            },\r\n            locator: {\r\n              patchSize: \"medium\",\r\n              halfSample: true\r\n            },\r\n            numOfWorkers: navigator.hardwareConcurrency || 2,\r\n            frequency: 10,\r\n            decoder: {\r\n              readers: [\r\n                \"code_128_reader\",\r\n                \"ean_reader\",\r\n                \"ean_8_reader\",\r\n                \"code_39_reader\",\r\n                \"code_39_vin_reader\",\r\n                \"codabar_reader\",\r\n                \"upc_reader\",\r\n                \"upc_e_reader\",\r\n                \"i2of5_reader\",\r\n                \"2of5_reader\",\r\n                \"code_93_reader\"\r\n              ]\r\n            },\r\n            locate: true\r\n          },\r\n          (err) => {\r\n            if (err) {\r\n              console.error(\"Barcode Scanner initialization failed:\", err);\r\n              resolve(false);\r\n              return;\r\n            }\r\n            \r\n            Quagga.start();\r\n            Quagga.onDetected((result) => {\r\n              if (result.codeResult && result.codeResult.code) {\r\n                console.log(\"Barcode detected:\", result.codeResult.code);\r\n                handleCodeDetected(result.codeResult.code, \"Barcode\");\r\n              }\r\n            });\r\n            \r\n            console.log(\"Barcode Scanner started successfully\");\r\n            resolve(true);\r\n          }\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Barcode Scanner setup error:\", error);\r\n      return false;\r\n    }\r\n  }, [selectedCamera, handleCodeDetected]);\r\n\r\n  const startScanning = useCallback(async () => {\r\n    try {\r\n      setIsRetrying(true);\r\n      setError(null);\r\n      setScannedCode(null);\r\n      setScanComplete(false);\r\n      setTimeLeft(15);\r\n      setIsScanning(true);\r\n      hasScannedRef.current = false;\r\n\r\n      // Check camera access first and get the stream\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          facingMode: selectedCamera ? undefined : { ideal: \"environment\" },\r\n          deviceId: selectedCamera ? { exact: selectedCamera } : undefined,\r\n          width: { min: 320, ideal: 640, max: 1280 },\r\n          height: { min: 240, ideal: 480, max: 720 }\r\n        }\r\n      });\r\n\r\n      console.log(\"Camera access granted, stream obtained:\", stream);\r\n      \r\n      // Set the video element source\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        console.log(\"Video element configured with camera stream\");\r\n      }\r\n\r\n      let success = false;\r\n\r\n      if (scanMode === \"qr\") {\r\n        success = await initializeQRScanner();\r\n      } else if (scanMode === \"barcode\") {\r\n        success = await initializeBarcodeScanner();\r\n      } else if (scanMode === \"auto\") {\r\n        // Try QR first, then barcode if QR fails\r\n        success = await initializeQRScanner();\r\n        if (!success) {\r\n          success = await initializeBarcodeScanner();\r\n        }\r\n      }\r\n\r\n      if (!success) {\r\n        throw new Error(\"Failed to initialize any scanner\");\r\n      }\r\n\r\n      setIsInitialized(true);\r\n      setIsRetrying(false);\r\n\r\n      // Set timeout\r\n      timeoutRef.current = setTimeout(() => {\r\n        if (!hasScannedRef.current) {\r\n          handleTimeout();\r\n        }\r\n      }, 15000);\r\n\r\n    } catch (error) {\r\n      console.error(\"Scanner initialization error:\", error);\r\n      setIsRetrying(false);\r\n      setIsScanning(false);\r\n      \r\n      if (error.name === 'NotAllowedError') {\r\n        setError(\"Camera access denied. Please allow camera permission and refresh the page.\");\r\n      } else if (error.name === 'NotFoundError') {\r\n        setError(\"No camera found. Please connect a camera and refresh the page.\");\r\n      } else if (error.name === 'NotReadableError') {\r\n        setError(\"Camera is already in use by another application. Please close other camera apps and refresh the page.\");\r\n      } else if (error.name === 'OverconstrainedError') {\r\n        setError(\"Camera doesn't support the required resolution. Trying with basic settings...\");\r\n        // Retry with basic constraints\r\n        setTimeout(async () => {\r\n          try {\r\n            const basicStream = await navigator.mediaDevices.getUserMedia({\r\n              video: true\r\n            });\r\n            if (videoRef.current) {\r\n              videoRef.current.srcObject = basicStream;\r\n              videoRef.current.play();\r\n            }\r\n            setIsRetrying(false);\r\n            setIsScanning(true);\r\n            setIsInitialized(true);\r\n          } catch (basicError) {\r\n            setError(`Camera error: ${basicError.message}`);\r\n          }\r\n        }, 1000);\r\n        return; // Don't set error message for this case\r\n      } else {\r\n        setError(`Scanner error: ${error.message}`);\r\n      }\r\n    }\r\n  }, [scanMode, selectedCamera, initializeQRScanner, initializeBarcodeScanner, handleTimeout]);\r\n\r\n  const resetScanner = useCallback(() => {\r\n    stopAllScanners();\r\n    setScannedCode(null);\r\n    setError(null);\r\n    setTimeLeft(15);\r\n    setIsScanning(false);\r\n    setScanComplete(false);\r\n    setFlash(false);\r\n    setIsInitialized(false);\r\n    setIsRetrying(false);\r\n    hasScannedRef.current = false;\r\n    \r\n    // Restart scanning after a brief delay\r\n    setTimeout(() => {\r\n      startScanning();\r\n    }, 100);\r\n  }, [stopAllScanners, startScanning]);\r\n\r\n  const handleManualSubmit = useCallback(() => {\r\n    if (manualInput.trim()) {\r\n      handleCodeDetected(manualInput.trim(), \"Manual Input\");\r\n      setManualInput(\"\");\r\n      setShowManualInput(false);\r\n    }\r\n  }, [manualInput, handleCodeDetected]);\r\n\r\n  const testCamera = useCallback(async () => {\r\n    try {\r\n      console.log(\"Testing camera access...\");\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      console.log(\"Camera test successful:\", stream);\r\n      setError(null);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        console.log(\"Video element updated with test stream\");\r\n      }\r\n      \r\n      // Stop the test stream after 3 seconds\r\n      setTimeout(() => {\r\n        stream.getTracks().forEach(track => track.stop());\r\n        console.log(\"Test stream stopped\");\r\n      }, 3000);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Camera test failed:\", error);\r\n      setError(`Camera test failed: ${error.message}`);\r\n    }\r\n  }, []);\r\n\r\n  // Initialize on mount\r\n  useEffect(() => {\r\n    getAvailableCameras();\r\n    startScanning();\r\n\r\n    return () => {\r\n      stopAllScanners();\r\n    };\r\n  }, [getAvailableCameras, startScanning, stopAllScanners]);\r\n\r\n  // Restart scanner when scan mode changes\r\n  useEffect(() => {\r\n    if (isInitialized) {\r\n      console.log(\"Scan mode changed, restarting scanner...\");\r\n      stopAllScanners();\r\n      setTimeout(() => {\r\n        startScanning();\r\n      }, 200);\r\n    }\r\n  }, [scanMode, isInitialized, stopAllScanners, startScanning]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      stopAllScanners();\r\n    };\r\n  }, [stopAllScanners]);\r\n\r\n  return (\r\n    <div className=\"scanner-container\">\r\n      {/* Scanner Controls */}\r\n      <div className=\"scanner-controls\">\r\n        <div className=\"scan-mode-selector\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"auto\"\r\n              checked={scanMode === \"auto\"}\r\n              onChange={(e) => setScanMode(e.target.value)}\r\n              disabled={isScanning}\r\n            />\r\n            Auto (QR + Barcode)\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"qr\"\r\n              checked={scanMode === \"qr\"}\r\n              onChange={(e) => setScanMode(e.target.value)}\r\n              disabled={isScanning}\r\n            />\r\n            QR Code Only\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"barcode\"\r\n              checked={scanMode === \"barcode\"}\r\n              onChange={(e) => setScanMode(e.target.value)}\r\n              disabled={isScanning}\r\n            />\r\n            Barcode Only\r\n          </label>\r\n        </div>\r\n\r\n        {cameraList.length > 1 && (\r\n          <div className=\"camera-selector\">\r\n            <label>Camera: </label>\r\n            <select\r\n              value={selectedCamera || \"\"}\r\n              onChange={(e) => setSelectedCamera(e.target.value)}\r\n              disabled={isScanning}\r\n            >\r\n              {cameraList.map((camera, index) => (\r\n                <option key={camera.deviceId} value={camera.deviceId}>\r\n                  {camera.label || `Camera ${index + 1}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Timer Display */}\r\n      {isScanning && (\r\n        <div className={`timer-display ${timeLeft <= 5 ? 'timer-warning' : ''}`}>\r\n          ⏱️ {timeLeft} seconds remaining\r\n        </div>\r\n      )}\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"error-display\">\r\n          <strong>⚠️ Error:</strong> {error}\r\n          {scanComplete && (\r\n            <button onClick={resetScanner} className=\"retry-button\">\r\n              🔄 Try Again\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Manual Input Option */}\r\n      {!isScanning && !scannedCode && (\r\n        <div className=\"manual-input-section\">\r\n          <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginBottom: '10px' }}>\r\n            <button\r\n              onClick={() => setShowManualInput(!showManualInput)}\r\n              className=\"manual-input-toggle\"\r\n            >\r\n              {showManualInput ? \"Hide\" : \"Show\"} Manual Input\r\n            </button>\r\n            <button\r\n              onClick={testCamera}\r\n              style={{\r\n                padding: '10px 20px',\r\n                background: '#3b82f6',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                fontWeight: '500',\r\n                transition: 'background 0.2s'\r\n              }}\r\n            >\r\n              📷 Test Camera\r\n            </button>\r\n          </div>\r\n          {showManualInput && (\r\n            <div className=\"manual-input-form\">\r\n              <input\r\n                type=\"text\"\r\n                value={manualInput}\r\n                onChange={(e) => setManualInput(e.target.value)}\r\n                placeholder=\"Enter code manually...\"\r\n                onKeyPress={(e) => e.key === 'Enter' && handleManualSubmit()}\r\n              />\r\n              <button onClick={handleManualSubmit} disabled={!manualInput.trim()}>\r\n                Submit\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Scanner View */}\r\n      <div className={`scanner-box ${flash ? \"scanner-flash\" : \"\"}`}>\r\n        <p>Point your camera at the code to scan</p>\r\n        \r\n        {!isInitialized && !error && (\r\n          <div className=\"status-message\">\r\n            {isRetrying ? \"Retrying...\" : \"Initializing camera...\"}\r\n            <div style={{ fontSize: '0.8rem', marginTop: '5px', color: '#666' }}>\r\n              Check browser console for detailed logs\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Scanner View - Only one scanner at a time */}\r\n        <div className=\"scanner-view\">\r\n          {/* QR Scanner Video */}\r\n          {scanMode === \"qr\" && (\r\n            <video ref={videoRef} style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }} />\r\n          )}\r\n          \r\n          {/* Barcode Scanner */}\r\n          {scanMode === \"barcode\" && (\r\n            <div ref={scannerRef} style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}></div>\r\n          )}\r\n          \r\n          {/* Auto mode - show video for QR, div for barcode */}\r\n          {scanMode === \"auto\" && (\r\n            <>\r\n              <video ref={videoRef} style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }} />\r\n              <div ref={scannerRef} style={{ width: \"100%\", height: \"100%\", position: \"absolute\", top: 0, left: 0, opacity: 0 }}></div>\r\n            </>\r\n          )}\r\n          \r\n          {/* Focus indicators */}\r\n          {isScanning && (\r\n            <div className=\"focus-indicator\">\r\n              <div className=\"scan-frame\"></div>\r\n              {scanMode === \"barcode\" && <div className=\"scan-line\"></div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Success Display */}\r\n      {scannedCode && (\r\n        <div className=\"success-display\">\r\n          <div className=\"success-icon\">✅</div>\r\n          <h3>Code Scanned Successfully!</h3>\r\n          <div className=\"scanned-details\">\r\n            <p><strong>Type:</strong> {scannedCode.type}</p>\r\n            <p><strong>Code:</strong> <code>{scannedCode.code}</code></p>\r\n          </div>\r\n          <div style={{ display: 'flex', gap: '10px', justifyContent: 'center' }}>\r\n            <button onClick={resetScanner} className=\"scan-again-button\">\r\n              🔄 Scan Another Code\r\n            </button>\r\n            <button \r\n              onClick={() => navigate(`/verify?code=${encodeURIComponent(scannedCode.code)}`)}\r\n              style={{\r\n                padding: '12px 24px',\r\n                background: '#059669',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                fontWeight: '500',\r\n                fontSize: '1rem',\r\n                transition: 'background 0.2s'\r\n              }}\r\n            >\r\n              ✅ Verify This Code\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      {isInitialized && !error && !scanComplete && (\r\n        <div className=\"instructions\">\r\n          <p>📱 Position the code within the frame and hold steady</p>\r\n          <p>💡 Ensure good lighting and avoid reflections</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}